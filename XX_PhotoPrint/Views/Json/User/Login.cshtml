@using XX_PhotoPrint.Service
@using System.Web.Script.Serialization
@{
	Layout = null;

	var js = new JavaScriptSerializer();

	var req = new Req();
	string account = req.String("Account", false, "未输入账号");
	string password = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(req.String("Password", false, "未输入密码"), "md5");

	if (req.HasError)
	{
		Output.Write(js.Serialize(new { success = false, msg = req.FirstError, errors = req.GetErrors() }));
		return;
	}

	var user = SQL.QueryOne("select UserID,UserName,Password,LatestLoginDate,Avatars from Users where Account=@p0", account);
	if (user == null)
	{
		Output.Write(js.Serialize(new { success = false, msg = "该账号不存在" }));
		return;
	}

	string pwd = (string)user["Password"];
	if (!pwd.Equals(password, StringComparison.OrdinalIgnoreCase))
	{
		Output.Write(js.Serialize(new { success = false, msg = "密码错误" }));
		return;
	}

	user.Remove("Password");

	int uid = (int)user["UserID"];
	DateTime date = DateTime.Now;
	string auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(account + date.ToString("yyyyMMddHHmmssffff") + password, "md5");
	string md5auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(auth, "md5");

	SQL.Execute("update Users set Auth=@p0,LatestLoginDate=@p1 where UserID=@p2", md5auth, date, uid);
	user["Auth"] = auth;
	user["LatestLoginDate"] = date.ToString("yyyy-MM-dd HH:mm:ss");
	user["Avatars"] = "http://" + Request.Url.Authority + "/Content/" + user["Avatars"];

	UserService.SetAuth(account, md5auth);

	Output.Write(js.Serialize(new { success = true, userinfo = user }));
	return;
}
