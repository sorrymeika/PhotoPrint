@using XX_PhotoPrint.Service
@using System.Web.Script.Serialization
@{
    Layout = null;

    var req = new Req();
    string account = req.String("Account", false, "未输入账号");
    string password = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(req.String("Password", false, "未输入密码"), "md5");

    if (req.HasError)
    {
        Json.Write(new { success = false, msg = req.FirstError, errors = req.GetErrors() }, Output);
        return;
    }

    var user = SQL.QueryOne("select UserID,UserName,Account,Password,LatestLoginDate,Avatars,RealName,Gender,BirthDay,Mobile from Users where Account=@p0 or Mobile=@p0", account);
    if (user == null)
    {
        Json.Write(new { success = false, msg = "该账号不存在" }, Output);
        return;
    }

    string pwd = (string)user["Password"];
    if (!pwd.Equals(password, StringComparison.OrdinalIgnoreCase))
    {
        Json.Write(new { success = false, msg = "密码错误" }, Output);
        return;
    }

    user.Remove("Password");

    int uid = (int)user["UserID"];
    DateTime date = DateTime.Now;
    string auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(account + date.ToString("yyyyMMddHHmmssffff") + password, "md5");
    string md5auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(auth, "md5");

    SQL.Execute("update Users set Auth=@p0,LatestLoginDate=@p1 where UserID=@p2", md5auth, date, uid);
    user["Auth"] = auth;
    user["LatestLoginDate"] = date.ToString("yyyy-MM-dd HH:mm:ss");
    user["Avatars"] = "http://" + Request.Url.Authority + "/Content/" + user["Avatars"];

    user["Addresslist"] = UserService.GetAddress(uid);

    UserService.SetAuth(account, md5auth);

    Json.Write(new { success = true, userinfo = user }, Output);
    return;
}
