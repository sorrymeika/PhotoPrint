@using XX_PhotoPrint.Service
@using System.Web.Script.Serialization
@{
	Layout = null;

	var js = new JavaScriptSerializer();

	var req = new Req();
	string account = req.String("Account", false, "未输入账号");


	if (req.HasError)
	{
		Output.Write(js.Serialize(new { success = false, msg = req.FirstError, errors = req.GetErrors() }));
		return;
	}

	var pwd = SQL.QueryScalar<string>("select Password from Users where Account=@p0", account);
	if (pwd == null)
	{
		Output.Write(js.Serialize(new { success = false, msg = "该账号不存在" }));
		return;
	}

	var data = SQL.Query("select Name,Value from Settings where Name in ('email','password','smtp')");

	string email = data == null || data.FirstOrDefault(a => a["Name"].ToString() == "email") == null ? null : (string)data.FirstOrDefault(a => a["Name"].ToString() == "email")["Value"];
	string emailPassword = data == null || data.FirstOrDefault(a => a["Name"].ToString() == "password") == null ? null : (string)data.FirstOrDefault(a => a["Name"].ToString() == "password")["Value"];
	string smtp = data == null || data.FirstOrDefault(a => a["Name"].ToString() == "smtp") == null ? null : (string)data.FirstOrDefault(a => a["Name"].ToString() == "smtp")["Value"];

	DateTime date = DateTime.Now;

	string auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(account + date.ToString("yyyyMMddHHmmssffff") + pwd, "md5");

	string md5auth = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(auth, "md5");

	SQL.Execute("update Users set Auth=@p0,LatestLoginDate=@p1 where Account=@p2", md5auth, date, account);

	UserService userService = new UserService();
	userService.SendMain(email, emailPassword, account, smtp, "INSTAFABRIC密码找回", "您正在使用INSTAFABRIC密码找回系统，请进入 “" + ("http://" + Request.Url.Authority + "/json/user/passwordreset?account=" + HttpUtility.UrlEncode(account) + "&auth=" + md5auth) + "” 以重置您的密码！");

	Output.Write(js.Serialize(new { success = true }));
	return;
}
;